{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til92","result":{"data":{"markdownRemark":{"id":"14d79e14-0a28-5f15-87d4-8af6b4be2054","html":"<h3 id=\"상수변수-선언\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%88%98%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\" aria-label=\"상수변수 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상수/변수 선언</h3>\n<ul>\n<li><code class=\"language-text\">var</code> 대신 상수는 <code class=\"language-text\">const</code> 변수는 <code class=\"language-text\">let</code>을 사용</li>\n<li>실제 개발에서는 <code class=\"language-text\">const</code>를 주로 사용하게 될 것</li>\n<li><code class=\"language-text\">const</code>는 재할당 불가능하지만 내부 속성값은 수정 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> tom <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Python\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tom<span class=\"token punctuation\">[</span><span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Python</span>\n\ntom<span class=\"token punctuation\">.</span>lang <span class=\"token operator\">=</span> <span class=\"token string\">\"JavaScript\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>tom<span class=\"token punctuation\">[</span><span class=\"token string\">\"lang\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// JavaScript</span></code></pre></div>\n<h3 id=\"object-선언\" style=\"position:relative;\"><a href=\"#object-%EC%84%A0%EC%96%B8\" aria-label=\"object 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object 선언</h3>\n<ul>\n<li>파이썬에서처럼 문자열로 이루어진 key를 따옴표로 묶지 않아도 된다.</li>\n<li>아래 tom1과 tom2는 동일</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> tom1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  region<span class=\"token operator\">:</span> <span class=\"token string\">\"Seoul\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> tom2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"region\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Seoul\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<ul>\n<li>Key 이름 연산이 필요한 경우엔 대괄호로 묶어야 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> tom <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"region\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Seoul\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"score\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token number\">100</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p>참고) 파이썬이었다면?</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">tom <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"region\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Seoul\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"score\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"1\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<ul>\n<li>선언한 변수를 Key 이름으로 사용하려면 대괄호로 묶어야 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> key1 <span class=\"token operator\">=</span> <span class=\"token string\">\"location\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> tom <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>key1<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Seoul\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p>참고) 파이썬이었다면?</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">key1 <span class=\"token operator\">=</span> <span class=\"token string\">\"location\"</span>\n\ntom <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span>\n  key1<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Seoul\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<ul>\n<li>Key와 값 이름이 동일하면 단축해서 사용할 수 있다.</li>\n<li>아래 tom1과 tom2는 동일</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> tom1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> name<span class=\"token punctuation\">,</span>\n  age<span class=\"token operator\">:</span> age\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> tom2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">,</span>\n  age\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"객체-복사\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EB%B3%B5%EC%82%AC\" aria-label=\"객체 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 복사</h3>\n<ul>\n<li>객체나 배열을 대입했을 때 얕은 복사(Shallow Copy)가 일어나므로 대입 이후 원 객체에서 변화한 값도 반영된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>value1<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> obj2\n\nobj1<span class=\"token punctuation\">.</span>value1 <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이때 obj2의 value1 값도 obj1을 따라서 11이 된다.</p>\n<p>깊은 복사처럼 대입 후에는 영향이 없도록 별개 객체로 만들어줄 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>value1<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> obj3 <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nobj1<span class=\"token punctuation\">.</span>value1 <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이때 obj3.value1은 그대로 10이다.</p>\n<h3 id=\"template-literals\" style=\"position:relative;\"><a href=\"#template-literals\" aria-label=\"template literals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Template Literals</h3>\n<ul>\n<li>문자열 여러 줄을 표현할 때 백틱 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">string text line1\nstring text line2</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<br>\n<ul>\n<li>선언한 변수를 대입하고 싶을 때는 달러사인과 중괄호 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">string text </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>expression<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> line1\nstring text line2</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<br>\n<p>참고) 파이썬이었다면?</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''string text line1\nstring text line2'''</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token string-interpolation\"><span class=\"token string\">f'''string text </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>expression<span class=\"token punctuation\">}</span></span><span class=\"token string\"> line1\nstring text line2'''</span></span></code></pre></div>\n<h3 id=\"배열-비구조화\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EB%B9%84%EA%B5%AC%EC%A1%B0%ED%99%94\" aria-label=\"배열 비구조화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 비구조화</h3>\n<ul>\n<li>리액트에서 자주 쓰는 문법!!!</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// \"Tom\"만 name에 할당</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Seoul\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 10만 age에 할당</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Seoul\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// height에는 undefined 할당</span>\n<span class=\"token comment\">// ValueError 같은 건 나지 않는다... 띠용</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> region<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Seoul\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// height에는 지정한 default값 할당</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> region<span class=\"token punctuation\">,</span> height<span class=\"token operator\">=</span><span class=\"token number\">150</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Seoul\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<ul>\n<li>default 값을 함수로 지정할 수도 있다. default 값이 필요할 때, 즉 undefined 상황에서 함수를 호출한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">get_default_height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">150</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// get_default_height 함수를 호출해 height에 함수 리턴값(150)을 할당</span>\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> region<span class=\"token punctuation\">,</span> height<span class=\"token operator\">=</span><span class=\"token function\">get_default_height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Seoul\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/posts/til92","tagSlugs":["/tag/til/","/tag/javascript/","/tag/react/"]},"frontmatter":{"date":"2021-02-17T23:18:32","description":"상수/변수 선언, Object 선언, 단축 속성, 배열/객체 비구조화 등","tags":["til","javascript","react"],"title":"꼭 알아야할 ES6 문법 (1)","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til92"}}}