{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til53","result":{"data":{"markdownRemark":{"id":"7e1a39f4-96e0-50d7-a7ad-2372ef29410c","html":"<h3 id=\"db-백업하기-복원하기\" style=\"position:relative;\"><a href=\"#db-%EB%B0%B1%EC%97%85%ED%95%98%EA%B8%B0-%EB%B3%B5%EC%9B%90%ED%95%98%EA%B8%B0\" aria-label=\"db 백업하기 복원하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB 백업하기, 복원하기</h3>\n<p>데이터베이스를 손쉽게 주고받고 복원해보자.</p>\n<p><code class=\"language-text\">mysqldump -u 아이디 -p DB이름 &gt; 파일명.sql</code><br>\nMySQL database 안에 있는 데이터 백업하기</p>\n<p><code class=\"language-text\">mysql -u 아이디 -p DB이름 &lt; 파일명.sql</code><br>\n.sql 파일로 만든 데이터를 데이터베이스 안에 넣기<br>\n첫 명령어가 <code class=\"language-text\">mysql</code>인 것과 화살표 방향 주의. 데이터 받을 땐 명령어 <code class=\"language-text\">mysqldump</code> 아님.</p>\n<p>만약 덤프 뜬 파일을 db에 저장할 때 다음과 같은 오류가 발생한다면,</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ERROR 1418 (HY000) : This function hasn none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)</code></pre></div>\n<p>mysql 상에서 아래 명령어를 입력하면 해결할 수 있다. 1(on, true) 상태일 때만 함수를 생성할 수 있어서 생기는 에러다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">SET GLOBAL log_bin_trust_function_creators = 1;</code></pre></div>\n<h3 id=\"sql-파일로-modelspy-만들기\" style=\"position:relative;\"><a href=\"#sql-%ED%8C%8C%EC%9D%BC%EB%A1%9C-modelspy-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"sql 파일로 modelspy 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.sql 파일로 models.py 만들기</h3>\n<p>.sql 파일만으로 models.py를 자동으로 생성할 수도 있다. <a href=\"https://docs.djangoproject.com/en/3.0/howto/legacy-databases/#auto-generate-the-models\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">장고 공식 문서</a></p>\n<p><code class=\"language-text\">python manage.py inspectdb &gt; models.py</code><br></p>\n<p>이렇게 models.py를 생성하면 파일 상단에 몇 가지 안내사항이 생긴다.</p>\n<ul>\n<li>테이블 순서는 (프로젝트 진행자의 의도에 맞게) 다시 조정해야 한다.</li>\n<li>모든 클래스에는 자동으로 Primary key 필드가 지정되며, <code class=\"language-text\">(primary_key=True)</code> 속성이 있는 필드가 pk로 지정된 필드다.</li>\n<li>ForeignKey 필드와 OneToOne 필드의 <code class=\"language-text\">on_delete</code> 속성값을 다시 확인해야 한다.</li>\n<li>장고가 테이블을 생성하고 수정하고 삭제하게 하려면 각 클래스 안 Meta 클래스의 <code class=\"language-text\">managed = False</code> 설정을 지워준다.</li>\n<li>클래스 이름은 수정해도 되지만 테이블 이름(<code class=\"language-text\">db_table</code> 값)과 필드명은 수정하면 안 된다.</li>\n</ul>\n<p>참고해서 models.py를 다듬으면 된다.</p>\n<h3 id=\"번외-db-schema가-든-sql-파일로-aquery-생성하기\" style=\"position:relative;\"><a href=\"#%EB%B2%88%EC%99%B8-db-schema%EA%B0%80-%EB%93%A0-sql-%ED%8C%8C%EC%9D%BC%EB%A1%9C-aquery-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"번외 db schema가 든 sql 파일로 aquery 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>번외. DB schema가 든 sql 파일로 Aquery 생성하기</h3>\n<p>‘SQL로 테이블 생성’ 메뉴 선택 후 schema 내용만 dump한 sql 파일 내용을 긁어다 붙이면 끝. 테이블 간 연결까지 모두 자동으로 된다. 문명 짱!</p>","fields":{"slug":"/posts/til53","tagSlugs":["/tag/til/","/tag/mysql/","/tag/database/"]},"frontmatter":{"date":"2020-07-21T23:07:32","description":"DB 백업 파일 만들기, 복원하기, .sql 파일만으로 models.py 생성하기","tags":["til","mysql","database"],"title":"MySQL database 백업하기, 복원하기","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til53"}}}