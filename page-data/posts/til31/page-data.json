{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til31","result":{"data":{"markdownRemark":{"id":"537f009a-4973-5770-a9cf-b6b8aec44f5d","html":"<h3 id=\"빌보드-top-100-순위-가수-이름-곡-제목-앨범-아트-이미지-주소-크롤링\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%EB%B3%B4%EB%93%9C-top-100-%EC%88%9C%EC%9C%84-%EA%B0%80%EC%88%98-%EC%9D%B4%EB%A6%84-%EA%B3%A1-%EC%A0%9C%EB%AA%A9-%EC%95%A8%EB%B2%94-%EC%95%84%ED%8A%B8-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A3%BC%EC%86%8C-%ED%81%AC%EB%A1%A4%EB%A7%81\" aria-label=\"빌보드 top 100 순위 가수 이름 곡 제목 앨범 아트 이미지 주소 크롤링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌보드 TOP 100 순위, 가수 이름, 곡 제목, 앨범 아트 이미지 주소 크롤링</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Selenium 임포트</span>\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token comment\"># 키보드 down키(↓)를 누르게 하기 위해 Keys 임포트</span>\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>keys <span class=\"token keyword\">import</span> Keys\n<span class=\"token comment\"># Beautiful Soup 임포트</span>\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n\n<span class=\"token comment\"># csv 파일 생성을 위해 임포트</span>\n<span class=\"token keyword\">import</span> csv\n\n\n<span class=\"token comment\"># 생성할 csv 파일 이름</span>\ncsv_filename <span class=\"token operator\">=</span> <span class=\"token string\">'billboard.csv'</span>\n<span class=\"token comment\"># csv 파일을 쓰기 방식으로 열기, 인코딩 형식 지정</span>\ncsv_open <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>csv_filename<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w+\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\ncsv_writer <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>csv_open<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># csv 파일 열 이름 지정. 쓴 개수만큼 열 생성</span>\ncsv_writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'rank'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'artist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 크롬드라이버가 저장된 경로</span>\nPATH <span class=\"token operator\">=</span> <span class=\"token string\">\"/Users/NAON/myprojects/chromedriver\"</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>PATH<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 소스를 긁어올 사이트 주소</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.billboard.com/charts/hot-100\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 앨범 아트 이미지 로딩을 위해 키보드 down키(↓) 반복</span>\nbody <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    keys <span class=\"token operator\">=</span> body<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>PAGE_DOWN<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 사이트에서 긁어온 소스를 html로 만들기</span>\nhtmlsrc <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>page_source\nbs <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>htmlsrc<span class=\"token punctuation\">,</span> <span class=\"token string\">'html.parser'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 특정 태그 중 class가 특정 이름인 것 전부 찾기</span>\nranks <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"class\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"chart-element__rank__number\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ntitles <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"class\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"chart-element__information__song\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nartists <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"class\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"chart-element__information__artist\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nwrapper <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"class\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"chart-element__wrapper\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nranks_wrap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ntitles_wrap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nartists_wrap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nimages_wrap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 위에서 찾아낸 내용을 각 리스트에 하나씩 밀어넣기</span>\n<span class=\"token keyword\">for</span> rank <span class=\"token keyword\">in</span> ranks<span class=\"token punctuation\">:</span>\n    rank_text <span class=\"token operator\">=</span> rank<span class=\"token punctuation\">.</span>get_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    ranks_wrap<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>rank_text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> title <span class=\"token keyword\">in</span> titles<span class=\"token punctuation\">:</span>\n    title_text <span class=\"token operator\">=</span> title<span class=\"token punctuation\">.</span>get_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    titles_wrap<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>title_text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> artist <span class=\"token keyword\">in</span> artists<span class=\"token punctuation\">:</span>\n    artist_text <span class=\"token operator\">=</span> artist<span class=\"token punctuation\">.</span>get_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    artists_wrap<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>artist_text<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> images <span class=\"token keyword\">in</span> wrapper<span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># span 태그 중 특정 클래스 이름을 가진 span 태그 추출 후 style attribute 값 부분 추출</span>\n    image <span class=\"token operator\">=</span> images<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> class_<span class=\"token operator\">=</span><span class=\"token string\">\"chart-element__image\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 이미지를 style 속성의 background-image 값으로 넣었으므로, background-image: url(\" 부분 먼저 제거하고 뒷부분 \"); 제거 </span>\n    url_text <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'background-image: url(\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n    images_wrap<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>url_text<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 순위, 곡 제목, 가수 이름, 앨범 아트 이미지 주소 리스트에서 n번째 요소끼리 튜플로 묶은 리스트 생성</span>\nwrap <span class=\"token operator\">=</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>ranks_wrap<span class=\"token punctuation\">,</span> titles_wrap<span class=\"token punctuation\">,</span> artists_wrap<span class=\"token punctuation\">,</span> images_wrap<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># n번째 튜플을 n번째 행에 넣음</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> wrap<span class=\"token punctuation\">:</span>\n   csv_writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 열어준 csv 파일 닫기</span>\ncsv_open<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 소스 긁어오느라 실행했던 드라이버 종료</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>for 반복문 부분을 list comprehension으로 더 간결하게 표현할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">ranks_wrap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>rank<span class=\"token punctuation\">.</span>get_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> rank <span class=\"token keyword\">in</span> ranks<span class=\"token punctuation\">]</span>\ntitles_wrap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>title<span class=\"token punctuation\">.</span>get_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> title <span class=\"token keyword\">in</span> titles<span class=\"token punctuation\">]</span>\nartists_wrap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>artist<span class=\"token punctuation\">.</span>get_text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> artist <span class=\"token keyword\">in</span> artists<span class=\"token punctuation\">]</span></code></pre></div>\n<br>\n<h3 id=\"스타벅스-전-메뉴-이름과-이미지-주소-크롤링\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%83%80%EB%B2%85%EC%8A%A4-%EC%A0%84-%EB%A9%94%EB%89%B4-%EC%9D%B4%EB%A6%84%EA%B3%BC-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A3%BC%EC%86%8C-%ED%81%AC%EB%A1%A4%EB%A7%81\" aria-label=\"스타벅스 전 메뉴 이름과 이미지 주소 크롤링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타벅스 전 메뉴 이름과 이미지 주소 크롤링</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Selenium 임포트</span>\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n<span class=\"token comment\"># Beautiful Soup 임포트</span>\n<span class=\"token keyword\">from</span> bs4 <span class=\"token keyword\">import</span> BeautifulSoup\n\n<span class=\"token comment\"># csv 파일 생성을 위해 임포트</span>\n<span class=\"token keyword\">import</span> csv\n\n<span class=\"token comment\"># 생성할 csv 파일 이름</span>\ncsv_filename <span class=\"token operator\">=</span> <span class=\"token string\">'starbucks.csv'</span>\n\n<span class=\"token comment\"># csv 파일을 쓰기 방식으로 열기, 인코딩 형식 지정</span>\ncsv_open <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>csv_filename<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w+\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\ncsv_writer <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>csv_open<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># csv 파일 열 이름 지정. 쓴 개수만큼 열 생성</span>\ncsv_writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'메뉴'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이미지 주소'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 크롬드라이버가 저장된 경로</span>\nPATH <span class=\"token operator\">=</span> <span class=\"token string\">\"/Users/NAON/myprojects/chromedriver\"</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>PATH<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 웹사이트의 모든 자원 로드를 기다리기 위해 암묵적으로 5초 대기. 그 전에 로딩이 끝나면 5초가 안 됐어도 다음 코드로 넘어감</span>\ndriver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 소스를 긁어올 사이트 주소</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.starbucks.co.kr/menu/drink_list.do\"</span><span class=\"token punctuation\">)</span>\nhtmlsrc <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>page_source\n\n<span class=\"token comment\"># 사이트에서 긁어온 소스를 html로 만들기</span>\nbs <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>htmlsrc<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># &lt;a> 태그 중 class 이름이 \"goDrinkView\"인 것 전부 찾기</span>\nimages <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"class\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"goDrinkView\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># &lt;image> 태그 속성 중 alt 속성에 (운 좋게도) 메뉴 이름이 있어서 그것을 메뉴 이름 열에 넣고 이미지 소스 주소를 다음 열에 넣음</span>\n<span class=\"token keyword\">for</span> image <span class=\"token keyword\">in</span> images<span class=\"token punctuation\">:</span>\n    img <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span>\n    csv_writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span><span class=\"token string\">'alt'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">[</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 열어준 csv 파일 닫기</span>\ncsv_open<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 소스 긁어오느라 실행했던 드라이버 종료</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"실습하면서-어려웠던-점\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5%ED%95%98%EB%A9%B4%EC%84%9C-%EC%96%B4%EB%A0%A4%EC%9B%A0%EB%8D%98-%EC%A0%90\" aria-label=\"실습하면서 어려웠던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습하면서 어려웠던 점</h3>\n<p>빌보드 순위, 곡 이름, 가수 이름은 뷰티풀 수프만으로도 크롤링이 가능했다. 하지만 앨범 아트 이미지는 페이지 최초 호출 시 한 번에 뜨는 것이 아니라 스크롤을 내려서 해당 앨범 아트가 뷰포트 영역에 들어온 후에야 로딩이 됐다. 따라서 동적인 페이지까지 긁어올 수 있는 셀레니움을 사용했다.</p>\n<p>문제는 인터넷 환경에 따라, 그리고 컴퓨터 성능에 따라 앨범 아트가 로딩되는 시간이 조금 더 걸린다는 점이었다. 다행히 페이스북처럼 스크롤을 계속 내려서 콘텐츠가 무한 로딩되는 스타일이 아니기 때문에 스크롤을 페이지 끝까지 내려주고 일정 시간 기다리면 해결할 수 있을 거라 생각했다. 하지만 스크롤을 화면 높이 0에서부터 사이트 끝까지 한 번에 내려주니 중간에 있는 앨범 아트는 로딩되지 않았다. 무조건 뷰포트에 한 번씩은 들어와야 로딩되는 것이다.</p>\n<p>처음엔 2000px씩 끊어서 5초 기다린 후 또 2000px씩 내려가는 방법으로 시도했다. 그런데 2000px도 간격이 너무 넓었던 것인지 누락되는 이미지가 있었다.. 그래서 1000px 간격으로 다시 시도했는데, 내가 봐도 정말 정말 비효율적인 코드가 나왔다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">driver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(0, 1000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(1000, 2000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(2000, 3000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(3000, 4000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(4000, 5000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(5000, 6000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(6000, 7000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(7000, 8000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(8000, 9000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(9000, 10000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(10000, 11000);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">\"window.scrollTo(11000, document.body.scrollHeight);\"</span><span class=\"token punctuation\">)</span>\ntime<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이 못생긴 코드는 무엇인지… 게다가 로딩 시간을 5초씩 준 덕분에 한 번 크롤링 하려면 1분이 걸린다. 테스트 할 때도 이만저만 불편한 게 아니었고 더 큰 문제는 이렇게 긁어온 이미지 주소가 리스트에 들어가지 않았다는 것이다. 개별로 출력하면 잘 나오고, 곡 제목이나 가수 이름이랑 마찬가지로 문자열 형태였는데 왜 에러가 떴는지는 아직도 의문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># print(url_text) 했을 때</span>\nhttps<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>charts<span class=\"token operator\">-</span>static<span class=\"token punctuation\">.</span>billboard<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>img<span class=\"token operator\">/</span><span class=\"token number\">2020</span><span class=\"token operator\">/</span><span class=\"token number\">05</span><span class=\"token operator\">/</span>lady<span class=\"token operator\">-</span>gaga<span class=\"token operator\">-</span>b8x<span class=\"token operator\">-</span>rain<span class=\"token operator\">-</span>on<span class=\"token operator\">-</span>me<span class=\"token operator\">-</span>n1e<span class=\"token operator\">-</span>155x155<span class=\"token punctuation\">.</span>jpg\nhttps<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>charts<span class=\"token operator\">-</span>static<span class=\"token punctuation\">.</span>billboard<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>img<span class=\"token operator\">/</span><span class=\"token number\">2020</span><span class=\"token operator\">/</span><span class=\"token number\">03</span><span class=\"token operator\">/</span>megan<span class=\"token operator\">-</span>thee<span class=\"token operator\">-</span>stallion<span class=\"token operator\">-</span>z0z<span class=\"token operator\">-</span>savage<span class=\"token operator\">-</span>7q2<span class=\"token operator\">-</span>155x155<span class=\"token punctuation\">.</span>jpg\nhttps<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>charts<span class=\"token operator\">-</span>static<span class=\"token punctuation\">.</span>billboard<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>img<span class=\"token operator\">/</span><span class=\"token number\">2017</span><span class=\"token operator\">/</span><span class=\"token number\">01</span><span class=\"token operator\">/</span>dababy<span class=\"token operator\">-</span>sfn<span class=\"token operator\">-</span>155x155<span class=\"token punctuation\">.</span>jpg\n\n<span class=\"token comment\"># 코드 후략</span></code></pre></div>\n<p>하지만 빈 리스트에 이 주소를 하나씩 넣으려고 하니 <code class=\"language-text\">IndexError</code> 발생. 왜죠?</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"crawling.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    url_text <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'background-image: url(\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nIndexError<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span> index out of <span class=\"token builtin\">range</span></code></pre></div>\n<p>혹시 <code class=\"language-text\">url_text</code> 결과값은 문자열이 아닌가 싶어서 이렇게도 확인해보았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"artist_text=\"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>artist_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"url_text=\"</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>url_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">artist <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span>\nurl <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span></code></pre></div>\n<p>둘 다 문자열인데 왜 가수 이름은 리스트로 잘 append되고 이미지 주소는 안 되는지…</p>\n<p>한참 씨름하다 테스트 한 번 할 때마다 1분씩 기다리는 게 어이없어서 스크롤 다운 방식을 DOWN 키를 누르는 방식으로 바꿨다. 그런데 의외로 코드가 동작하는 것이다! 문제는 스크롤을 내리면서 이미지를 로딩시키는 방식에 있었나보다. 아직 이유를 모르기 때문에 확인 후 내용을 보충할 것이다.</p>","fields":{"slug":"/posts/til31","tagSlugs":["/tag/til/","/tag/python/","/tag/beautiful-soup/","/tag/selenium/","/tag/wecode/"]},"frontmatter":{"date":"2020-06-08T10:47:32","description":"Beautiful Soup와 Selenium으로 빌보드 TOP 100 정보와 스타벅스 메뉴 정보를 크롤링해보았다.","tags":["til","python","beautiful-soup","selenium","wecode"],"title":"Python - 웹 크롤링 실습","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til31"}}}