{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til49","result":{"data":{"markdownRemark":{"id":"aa620cd8-59e3-589a-83c5-2b0256aecb89","html":"<p>쇼핑몰 상품 상세 페이지 크롤링을 해보았다.</p>\n<p>한 번에 모든 코드를 작성해서 돌리면 100% 에러가 나기 때문에 요소 하나마다 테스트를 해줬다. 각 요소가 잘 추출되는 것을 확인하고 한꺼번에 크롤러를 돌렸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> csv\n<span class=\"token keyword\">import</span> time\n\n<span class=\"token keyword\">from</span> selenium                       <span class=\"token keyword\">import</span> webdriver\n<span class=\"token keyword\">from</span> bs4                            <span class=\"token keyword\">import</span> BeautifulSoup\n<span class=\"token keyword\">from</span> selenium<span class=\"token punctuation\">.</span>webdriver<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>keys <span class=\"token keyword\">import</span> Keys\n\ncsv_filename <span class=\"token operator\">=</span> <span class=\"token string\">'products.csv'</span>\ncsv_open     <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>csv_filename<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w+\"</span><span class=\"token punctuation\">,</span> encoding <span class=\"token operator\">=</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\ncsv_writer   <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>csv_open<span class=\"token punctuation\">)</span>\ncsv_writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'product_number'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'product_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'like'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'product_image_url'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'thumbnail_image_url'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'discount_price'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'original_price'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'material'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'country'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nPATH   <span class=\"token operator\">=</span> <span class=\"token string\">\"/Users/NAON/myprojects/chromedriver\"</span>\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span>PATH<span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"해당url\"</span><span class=\"token punctuation\">)</span>\n\nhtmlsrc  <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>page_source\nbs       <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>htmlsrc<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span>\n\nrows <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">productpage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    elements <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_elements_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">'.ProductList > li > a'</span><span class=\"token punctuation\">)</span>\n    links    <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> element <span class=\"token keyword\">in</span> elements<span class=\"token punctuation\">:</span>\n        link <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span>get_attribute<span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">)</span>\n        links<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> link <span class=\"token keyword\">in</span> links<span class=\"token punctuation\">:</span>\n        driver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">)</span>\n        driver<span class=\"token punctuation\">.</span>implicitly_wait<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n        htmlsrc <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>page_source\n        bs      <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>htmlsrc<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token comment\"># 상품명 긁어오기</span>\n        product_name <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'class'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'ProductDetail__title'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n\n        <span class=\"token comment\"># 좋아요 수 긁어오기</span>\n        like <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'class'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'WishButtonPc__text WishButtonPc__text--middle'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n\n        <span class=\"token comment\"># 상품 상세 이미지 긁어오기</span>\n        <span class=\"token comment\"># 한 제품 이미지가 여러 장이지만 각 주소를 ,로 구분해서 한 셀 안에 넣는다.</span>\n        <span class=\"token comment\"># 그래야 한 제품 당 한 row만 차지하기 때문</span>\n        <span class=\"token comment\"># join은 리스트 요소를 문자열로 꺼내올 수 있는 함수다.</span>\n        images            <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'class'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'ProductDetailContainer__form__thumbnail__image'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        product_image_url <span class=\"token operator\">=</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>image<span class=\"token punctuation\">[</span><span class=\"token string\">'data-src'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> image <span class=\"token keyword\">in</span> images<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 옵션 선택 썸네일 이미지 긁어오기</span>\n        <span class=\"token comment\"># 이미지가 style 속성의 값인 background-image로 설정되어있기 때문에</span>\n        <span class=\"token comment\"># url만 남기고 긁어올 수 있도록 나머지 텍스트는 split으로 발라내준다.</span>\n        thumbs              <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'class'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'ProductColor__item'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        thumbnail_image_url <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>thumb<span class=\"token punctuation\">[</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'background-image: url(\"'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> thumb <span class=\"token keyword\">in</span> thumbs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 가격 긁어오기</span>\n        <span class=\"token comment\"># 할인 가격이 있는 상품이 있고 없는 상품이 있기 때문에</span>\n        <span class=\"token comment\"># try, except로 케이스를 분기해서 처리했다.</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            discount_price <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'strong'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'class'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'ProductDetail__price--sale-price'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n            original_price <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'class'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'ProductDetail__price--consumer-price'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            discount_price <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n            original_price <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'strong'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'class'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'ProductDetail__price'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 소재 긁어오기</span>\n        <span class=\"token comment\"># 소재는 상품 페이지 아래 부분에 있으면서</span>\n        <span class=\"token comment\"># 스크롤이 가까이 내려가야 비로소 로딩되기 때문에</span>\n        <span class=\"token comment\"># 아래 키(↓)를 눌러 스크롤을 내려준다.</span>\n        body <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            keys <span class=\"token operator\">=</span> body<span class=\"token punctuation\">.</span>send_keys<span class=\"token punctuation\">(</span>Keys<span class=\"token punctuation\">.</span>PAGE_DOWN<span class=\"token punctuation\">)</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 스크롤을 내려준 후에야 소스가 로딩되기 때문에 다시 긁어와서 html로 변환해준다.</span>\n        htmlsrc <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>page_source\n        bs      <span class=\"token operator\">=</span> BeautifulSoup<span class=\"token punctuation\">(</span>htmlsrc<span class=\"token punctuation\">,</span> <span class=\"token string\">\"html.parser\"</span><span class=\"token punctuation\">)</span>\n        material    <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>select_one<span class=\"token punctuation\">(</span><span class=\"token string\">'.ProductDetailContent__desc > ul:nth-of-type(1) > li:nth-of-type(3) > p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n\n        <span class=\"token comment\"># 제조국 긁어오기</span>\n        country     <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>select_one<span class=\"token punctuation\">(</span><span class=\"token string\">'.ProductDetailContent__desc > ul:nth-child(1) > li:nth-child(4) > p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n        \n        <span class=\"token comment\"># 상품번호 긁어오기</span>\n        product_number_n <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">.</span>select_one<span class=\"token punctuation\">(</span><span class=\"token string\">'.ProductDetailContent__desc--ul > li:nth-child(1)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text\n        product_number   <span class=\"token operator\">=</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>product_number_n<span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># csv 파일에 넣을 것. 컬럼명 순서와 같게 해준다.</span>\n        csv_writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>product_number<span class=\"token punctuation\">,</span> product_name<span class=\"token punctuation\">,</span> like<span class=\"token punctuation\">,</span> product_image_url<span class=\"token punctuation\">,</span> thumbnail_image_url<span class=\"token punctuation\">,</span> discount_price<span class=\"token punctuation\">,</span> original_price<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> country<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nproductpage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncsv_open<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/posts/til49","tagSlugs":["/tag/til/","/tag/selenium/","/tag/beautiful-soup/","/tag/python/","/tag/django/"]},"frontmatter":{"date":"2020-06-28T22:34:32.160Z","description":"1차 팀 프로젝트 첫 단계, 데이터 크롤링","tags":["til","selenium","beautiful-soup","python","django"],"title":"Selenium과 Beautiful Soup로 데이터 크롤링 하기","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til49"}}}