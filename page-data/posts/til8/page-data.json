{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til8","result":{"data":{"markdownRemark":{"id":"bf7268fc-1d55-59eb-892e-4b349e6de967","html":"<ul>\n<li><code class=\"language-text\">data</code> : 목록의 글을 저장한 폴더명</li>\n<li><code class=\"language-text\">index.py</code> : 초기 화면</li>\n<li>전체 코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/local/bin/python3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type: text/html\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> cgi<span class=\"token punctuation\">,</span> os\n \nfiles <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">)</span>\nlistStr <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n    listStr <span class=\"token operator\">=</span> listStr <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;li>&lt;a href=\"index.py?id={name}\">{name}&lt;/a>&lt;/li>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>item<span class=\"token punctuation\">)</span>\n     \nform <span class=\"token operator\">=</span> cgi<span class=\"token punctuation\">.</span>FieldStorage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'id'</span> <span class=\"token keyword\">in</span> form<span class=\"token punctuation\">:</span>\n    pageId <span class=\"token operator\">=</span> form<span class=\"token punctuation\">[</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value\n    description <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data/'</span><span class=\"token operator\">+</span>pageId<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    pageId <span class=\"token operator\">=</span> <span class=\"token string\">'Welcome'</span>\n    description <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, web'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''&lt;!doctype html>\n&lt;html>\n&lt;head>\n  &lt;title>WEB1 - Welcome&lt;/title>\n  &lt;meta charset=\"utf-8\">\n&lt;/head>\n&lt;body>\n  &lt;h1>&lt;a href=\"index.py\">WEB&lt;/a>&lt;/h1>\n  &lt;ol>\n    {listStr}\n  &lt;/ol>\n  &lt;h2>{title}&lt;/h2>\n  &lt;p>{desc}&lt;/p>\n&lt;/body>\n&lt;/html>\n'''</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span>pageId<span class=\"token punctuation\">,</span> desc<span class=\"token operator\">=</span>description<span class=\"token punctuation\">,</span> listStr<span class=\"token operator\">=</span>listStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cgi<span class=\"token punctuation\">,</span> os</code></pre></div>\n<p>cgi, os라는 명령어로 묶여있는 모듈을 사용하겠다는 선언</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"> files <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">listdir(path)</code>은 경로로 주어진 딕셔너리 안에 있는 모든 엔트리 리스트를 출력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span></code></pre></div>\n<p>files라는 리스트에 있는 값을 하나하나 꺼내서 item이라는 변수로 담는 것</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n    listStr <span class=\"token operator\">=</span> listStr <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;li>&lt;a href=\"index.py?id={name}\">{name}&lt;/a>&lt;/li>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>item<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">str.format()</code>은 파이썬 문자열 포매팅 방법 중 하나로, 중괄호 부분에 지정한 값을 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">form <span class=\"token operator\">=</span> cgi<span class=\"token punctuation\">.</span>FieldStorage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'id'</span> <span class=\"token keyword\">in</span> form<span class=\"token punctuation\">:</span>\n    pageId <span class=\"token operator\">=</span> form<span class=\"token punctuation\">[</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value\n    description <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data/'</span><span class=\"token operator\">+</span>pageId<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    pageId <span class=\"token operator\">=</span> <span class=\"token string\">'Welcome'</span>\n    description <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, web'</span></code></pre></div>\n<p><code class=\"language-text\">open = (file name, mode)</code>은 파일을 읽어오는 방식이다.<br>\n생성하고자 하는 파일이 index 파일과 다른 폴더에 있으면 <code class=\"language-text\">&#39;폴더명/&#39;+파일명</code>으로 지정한다.<br>\n위 코드는 id값이 있는 경우에 ‘data’ 디렉토리에서 파일을 ‘읽어오는’ 것이므로 모드는 ‘r’이다. 쓰기 모드는 ‘w’다.</p>\n<p><code class=\"language-text\">파일명.read()</code>\n여기에서는 위에서 연 파일을 열기 위함이다. else 이후에는 페이지에 id 값이 없을 때 반환할 텍스트 입력한다.</p>","fields":{"slug":"/posts/til8","tagSlugs":["/tag/til/","/tag/python/","/tag/생활코딩/"]},"frontmatter":{"date":"2020-04-22T12:12:32.160Z","description":"파이썬 반복문으로 글목록 만들기","tags":["til","python","생활코딩"],"title":"Python - 반복문으로 글목록 만들기","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til8"}}}