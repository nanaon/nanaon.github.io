{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til97","result":{"data":{"markdownRemark":{"id":"9da38ea6-2247-5806-bd50-218b99cedfb8","html":"<h3 id=\"12장-소켓시스템\" style=\"position:relative;\"><a href=\"#12%EC%9E%A5-%EC%86%8C%EC%BC%93%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"12장 소켓시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12장. 소켓시스템</h3>\n<h4 id=\"3-네트워크-프로그래밍\" style=\"position:relative;\"><a href=\"#3-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"3 네트워크 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 네트워크 프로그래밍</h4>\n<h4 id=\"강의-목표\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%98-%EB%AA%A9%ED%91%9C\" aria-label=\"강의 목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>강의 목표</h4>\n<ul>\n<li>소켓을 이용한 연결형 클라이언트-서버 구조 이해</li>\n<li>소켓을 이용한 비연결형 클라이언트-서버 구조 이해</li>\n</ul>\n<h4 id=\"연결형-서비스\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EA%B2%B0%ED%98%95-%EC%84%9C%EB%B9%84%EC%8A%A4\" aria-label=\"연결형 서비스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연결형 서비스</h4>\n<ul>\n<li>소켓: 네트워크 통신을 위한 소프트웨어 교신점</li>\n<li>두 개의 독립 프로세스가 네트워크를 통해 통신하려면 논리적인 연관관계를 맺어주는 소켓 필요</li>\n<li>\n<p>서버의 동작</p>\n<ul>\n<li>Well-known 포트에서 대기</li>\n<li>\n<p>동작과정</p>\n<ol>\n<li>서비스 교신점(호스트의 IP 주소, 포트번호) 공개</li>\n<li>클라이언트로부터 발생하는 서비스 요구 대기</li>\n<li>요청이 오면 클라이언트에 서비스 제공</li>\n<li>해당 클라이언트에 서비스 제공 완료</li>\n<li>단계 2로 이동, 반복</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>\n<p>클라이언트의 동작</p>\n<ul>\n<li>서버의 Well-known 포트로 접속 시도</li>\n<li>\n<p>동작 과정</p>\n<ol>\n<li>원하는 서비스를 제공하는 서버 확인</li>\n<li>해당 서버와 연결 시도</li>\n<li>서버에 서비스 요청</li>\n<li>서버에 서비스 요구 완료</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>TCP를 이용한 통신 절차\n<img src=\"/media/network12-1.png\" alt=\"TCP를 이용한 통신 절차\"></li>\n<li>\n<p>소켓 함수의 컴파일</p>\n<ul>\n<li>\n<p>소켓 관련 라이브러리리 추가 (solaris)</p>\n<ul>\n<li><code class=\"language-text\">cc -o time_client time_client.c -lsocket -lnsl</code></li>\n<li><code class=\"language-text\">cc -o time_server time_server.c -lsocket -lnsl</code></li>\n</ul>\n</li>\n<li>서버 먼저 실행하고, 이어서 클라이언트 실행</li>\n</ul>\n</li>\n<li>\n<p>클라이언트 예제</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># define TIME_SERVER  &quot;211.233.201.30&quot;\n# define TIME_PORT  5010</code></pre></div>\n</li>\n</ul>\n<p>main ()\n{\nint sock;\nstruct sockaddr_in server;\nchar buf [256];</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sock = socket (AP_INET, SOCK_STREAM, 0);\n\nserver.sin_family = AF_INET;\nserver.sin_addr.s_addr = htonl (inet_addr (TIME_SERVER));\nserver.sin_port = htons (TIME_PORT);\n\nconnect (sock, (struct sockaddr *)&amp;server, sizeof(server));\n\nif (recv (sock, buf, sizeof (buf), 0) == -1)\n    exit (1);\nprintf(&quot;Time information from server is %s&quot;, buf);\nclose (sock);</code></pre></div>\n<p>}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 서버 예제\n![](/media/network12-3.png)\n\n#### 비연결형 서비스\n- UDP를 이용한 통신 절차\n![UDP를 이용한 통신 절차](/media/network12-2.png)\n\n- 클라이언트 예제\n![](/media/network12-4.png)\n\n- 서버 예제\n![](/media/network12-5.png)</code></pre></div>","fields":{"slug":"/posts/til97","tagSlugs":["/tag/til/","/tag/network/"]},"frontmatter":{"date":"2021-02-27T17:25:32","description":"연결형/비연결형 클라이언트-서버 구조","tags":["til","network"],"title":"컴퓨터 네트워크 강의 - 12장. 소켓시스템 (3) 네트워크 프로그래밍","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til97"}}}