{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til76","result":{"data":{"markdownRemark":{"id":"183fb314-2b0e-5223-8814-2917d09970f2","html":"<h3 id=\"12강-수치-연산\" style=\"position:relative;\"><a href=\"#12%EA%B0%95-%EC%88%98%EC%B9%98-%EC%97%B0%EC%82%B0\" aria-label=\"12강 수치 연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12강 수치 연산</h3>\n<h4 id=\"select-구로-연산하기\" style=\"position:relative;\"><a href=\"#select-%EA%B5%AC%EB%A1%9C-%EC%97%B0%EC%82%B0%ED%95%98%EA%B8%B0\" aria-label=\"select 구로 연산하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SELECT 구로 연산하기</h4>\n<p>예시를 보는 것이 이해가 빠르므로 예를 들어보겠다.</p>\n<p><strong><center>price_table</center></strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">no</th>\n<th align=\"center\">price</th>\n<th align=\"center\">quantity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">1000</td>\n<td align=\"center\">10</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">230</td>\n<td align=\"center\">24</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">1980</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">*</span>quantity <span class=\"token keyword\">FROM</span> price_table<span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th align=\"center\">no</th>\n<th align=\"center\">price</th>\n<th align=\"center\">quantity</th>\n<th align=\"center\">price*quantity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">1000</td>\n<td align=\"center\">10</td>\n<td align=\"center\">10000</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">230</td>\n<td align=\"center\">24</td>\n<td align=\"center\">5520</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">1980</td>\n<td align=\"center\">1</td>\n<td align=\"center\">1980</td>\n</tr>\n</tbody>\n</table>\n<p>price*quantity라는 필드가 새로 생겼고 price와 quantity를 곱한 값이 반환됐다.</p>\n<h4 id=\"별명-붙이기\" style=\"position:relative;\"><a href=\"#%EB%B3%84%EB%AA%85-%EB%B6%99%EC%9D%B4%EA%B8%B0\" aria-label=\"별명 붙이기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>별명 붙이기</h4>\n<p>price*quantity는 너무 기니까 다른 이름을 붙여보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">*</span>quantity <span class=\"token keyword\">AS</span> total <span class=\"token keyword\">FROM</span> price_table<span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th align=\"center\">no</th>\n<th align=\"center\">price</th>\n<th align=\"center\">quantity</th>\n<th align=\"center\">total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">1000</td>\n<td align=\"center\">10</td>\n<td align=\"center\">10000</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">230</td>\n<td align=\"center\">24</td>\n<td align=\"center\">5520</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">1980</td>\n<td align=\"center\">1</td>\n<td align=\"center\">1980</td>\n</tr>\n</tbody>\n</table>\n<p>SELECT 구에서는 콤마(,)로 구분해 식 여러 개를 지정할 수 있고 각 식에 별명을 붙일 수도 있다. 별명은 중복이어도 괜찮지만 처리 방식에 따라서 문제가 발생할 수도 있으므로 보통 중복은 피해서 지정한다.</p>\n<p>또한 별명은 숫자로 시작할 수 없다. 숫자로 시작하는 별명을 사용하려면 더블쿼츠(“)로 묶어줘야 한다. MySQL에서는 숫자로 시작하는 별명을 허용하지만, 숫자로만 이루어진 별명은 안된다.</p>\n<p>별명에 아스키 문자 이외의 것을 사용하고자 할 때는 더블쿼트(“)를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">*</span>quantity <span class=\"token keyword\">AS</span> <span class=\"token string\">\"총액\"</span> <span class=\"token keyword\">FROM</span> price_table<span class=\"token punctuation\">;</span></code></pre></div>\n<p>참고) 명령구문을 분석할 때, 더블쿼트(“)로 둘러싼 것은 데이터베이스 객체 이름이라고 간주하고, 싱글쿼트(‘)로 둘러싼 것은 문자열 상수로 간주한다.</p>\n<p>별명을 붙일 때 사용하는 예약어 <code class=\"language-text\">AS</code>는 생략해도 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">*</span>quantity total <span class=\"token keyword\">FROM</span> price_table<span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"where-구에서-연산하기\" style=\"position:relative;\"><a href=\"#where-%EA%B5%AC%EC%97%90%EC%84%9C-%EC%97%B0%EC%82%B0%ED%95%98%EA%B8%B0\" aria-label=\"where 구에서 연산하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WHERE 구에서 연산하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">*</span>quantity <span class=\"token keyword\">AS</span> total <span class=\"token keyword\">FROM</span> price_table <span class=\"token keyword\">WHERE</span> price<span class=\"token operator\">*</span>quantity <span class=\"token operator\">>=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th align=\"center\">no</th>\n<th align=\"center\">price</th>\n<th align=\"center\">quantity</th>\n<th align=\"center\">total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">1000</td>\n<td align=\"center\">10</td>\n<td align=\"center\">10000</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">230</td>\n<td align=\"center\">24</td>\n<td align=\"center\">5520</td>\n</tr>\n</tbody>\n</table>\n<p>만약 WHERE 구에 열 별명을 쓴다면?</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">*</span>quantity <span class=\"token keyword\">AS</span> total <span class=\"token keyword\">FROM</span> price_table <span class=\"token keyword\">WHERE</span> total <span class=\"token operator\">>=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>total 필드를 찾을 수 없다는 에러가 발생한다. 내부 처리 순서가 <strong>WHERE 구 -> SELECT 구</strong>이기 때문이다. 별명을 선언하는 SELECT 구가 처리되기 이전에 WHERE 구를 실행하기 때문에 별명이 아닌 연산 그대로를 사용해야 한다.</p>\n<h4 id=\"null-값-연산\" style=\"position:relative;\"><a href=\"#null-%EA%B0%92-%EC%97%B0%EC%82%B0\" aria-label=\"null 값 연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NULL 값 연산</h4>\n<ul>\n<li>NULL + 1</li>\n<li>1 + NULL</li>\n<li>1 + 2 * NULL</li>\n<li>1 / NULL</li>\n</ul>\n<p>결과는 모두 <strong>NULL</strong>이다. NULL은 0이 아니라 <strong>값이 없는</strong> 상태이므로 NULL에다가 뭘 해봤자 NULL이다.</p>\n<h4 id=\"order-by-구에서-연산하기\" style=\"position:relative;\"><a href=\"#order-by-%EA%B5%AC%EC%97%90%EC%84%9C-%EC%97%B0%EC%82%B0%ED%95%98%EA%B8%B0\" aria-label=\"order by 구에서 연산하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ORDER BY 구에서 연산하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> price<span class=\"token operator\">*</span>quantity <span class=\"token keyword\">AS</span> total <span class=\"token keyword\">FROM</span> price_table <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> total <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th align=\"center\">no</th>\n<th align=\"center\">price</th>\n<th align=\"center\">quantity</th>\n<th align=\"center\">total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">1980</td>\n<td align=\"center\">1</td>\n<td align=\"center\">1980</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">230</td>\n<td align=\"center\">24</td>\n<td align=\"center\">5520</td>\n</tr>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">1000</td>\n<td align=\"center\">10</td>\n<td align=\"center\">10000</td>\n</tr>\n</tbody>\n</table>\n<p>ORDER BY는 가장 나중에 처리되므로 SELECT 구에서 지정한 별명을 사용할 수 있다. 정리하자면, 서버에서 내부처리 순서는 <strong>WHERE 구 -> SELECT 구 -> ORDER BY 구</strong>다.</p>\n<h4 id=\"mod-함수\" style=\"position:relative;\"><a href=\"#mod-%ED%95%A8%EC%88%98\" aria-label=\"mod 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MOD 함수</h4>\n<p>연산자 말고도 함수를 사용해 연산할 수도 있다. 나머지를 계산할 때는 <code class=\"language-text\">%</code> 연산자를 써도 되지만 <code class=\"language-text\">MOD</code> 함수를 써도 된다. Oracle에서는 <code class=\"language-text\">%</code> 연산자를 사용할 수 없으므로 함수를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">10 % 3\nMOD(10, 3)</code></pre></div>\n<p>두 식 모두 값 1을 반환한다.</p>\n<h4 id=\"round-함수\" style=\"position:relative;\"><a href=\"#round-%ED%95%A8%EC%88%98\" aria-label=\"round 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ROUND 함수</h4>\n<p>소수점 반올림 연산을 할 때 사용한다.</p>\n<p><strong><center>round_sample</center></strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">5961.60</td>\n</tr>\n<tr>\n<td align=\"center\">2138.40</td>\n</tr>\n<tr>\n<td align=\"center\">1080.00</td>\n</tr>\n</tbody>\n</table>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> total<span class=\"token punctuation\">,</span> <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> round_sample<span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th align=\"center\">total</th>\n<th align=\"center\">ROUND(total)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">5961.60</td>\n<td align=\"center\">5962</td>\n</tr>\n<tr>\n<td align=\"center\">2138.40</td>\n<td align=\"center\">2138</td>\n</tr>\n<tr>\n<td align=\"center\">1080.00</td>\n<td align=\"center\">1080</td>\n</tr>\n</tbody>\n</table>\n<p>ROUND 함수 사용 시, 반올림할 자릿수를 지정할 수 있으며 생략하면 소수점 첫째 자리에서 반올림한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> total<span class=\"token punctuation\">,</span> <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> round_sample<span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th align=\"center\">total</th>\n<th align=\"center\">ROUND(total, 1)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">5961.60</td>\n<td align=\"center\">5962.6</td>\n</tr>\n<tr>\n<td align=\"center\">2138.40</td>\n<td align=\"center\">2138.4</td>\n</tr>\n<tr>\n<td align=\"center\">1080.00</td>\n<td align=\"center\">1080.0</td>\n</tr>\n</tbody>\n</table>\n<p><code class=\"language-text\">ROUND(열, 자릿수)</code>에서 자릿수는 소수점 첫째 자리부터 0으로 센다. 0이면 소수점 첫째 자리에서 반올림, 1이면 둘째 자리에서 반올림, 2면 셋째 자리에서 반올림이다. 첫 번째 요소의 인덱스 값이 0부터 시작하는 리스트를 생각하면 덜 헷갈린다.</p>\n<p>반대로 1, 10, 100단위 이상으로도 반올림할 수 있다. 자릿수에 -1을 지정하면 1 단위에서 반올림, -2면 10단위에서 반올림, -3이면 100단위에서 반올림한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> total<span class=\"token punctuation\">,</span> <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> round_sample<span class=\"token punctuation\">;</span></code></pre></div>\n<table>\n<thead>\n<tr>\n<th align=\"center\">total</th>\n<th align=\"center\">ROUND(total, -1)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">5961.60</td>\n<td align=\"center\">5960</td>\n</tr>\n<tr>\n<td align=\"center\">2138.40</td>\n<td align=\"center\">2140</td>\n</tr>\n<tr>\n<td align=\"center\">1080.00</td>\n<td align=\"center\">1080</td>\n</tr>\n</tbody>\n</table>\n<p>반올림 말고 버림을 하고싶다면 <code class=\"language-text\">TRUNCATE()</code> 함수를 사용한다.</p>","fields":{"slug":"/posts/til76","tagSlugs":["/tag/til/","/tag/sql/","/tag/database/"]},"frontmatter":{"date":"2020-09-05T12:24:32","description":"12강 수치 연산","tags":["til","sql","database"],"title":"SQL 첫걸음 - 3장 정렬과 연산","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til76"}}}