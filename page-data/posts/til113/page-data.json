{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til113","result":{"data":{"markdownRemark":{"id":"d1b841cf-b40b-5419-b76f-420661d1916d","html":"<h3 id=\"라이브러리-없이-순수하게-상태값-업데이트-하기\" style=\"position:relative;\"><a href=\"#%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%97%86%EC%9D%B4-%EC%88%9C%EC%88%98%ED%95%98%EA%B2%8C-%EC%83%81%ED%83%9C%EA%B0%92-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%ED%95%98%EA%B8%B0\" aria-label=\"라이브러리 없이 순수하게 상태값 업데이트 하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>라이브러리 없이 순수하게 상태값 업데이트 하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"오렌지\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"사과\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"레몬\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"바나나\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>라는 배열에서 “사과”, “레몬”을 제거하고 그 자리에 “딸기”를 넣어보자.</p>\n<h3 id=\"나쁜-예\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%81%9C-%EC%98%88\" aria-label=\"나쁜 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나쁜 예</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">fruits<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"딸기\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'오렌지'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'딸기'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'바나나'</span> <span class=\"token punctuation\">]</span></code></pre></div>\n<p>원하는대로 변경하긴 했지만 fruits 객체(props)를 변경하므로 불변성 유지 실패</p>\n<h3 id=\"좋은-예\" style=\"position:relative;\"><a href=\"#%EC%A2%8B%EC%9D%80-%EC%98%88\" aria-label=\"좋은 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좋은 예</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> newFruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token operator\">...</span>fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"딸기\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>fruits<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>새 배열 newFruits를 만들어서 원 배열은 유지한다.</p>\n<p>fruits 배열을 풀어서(…) 0번 인덱스부터 1개 가져오고, 다음에 “딸기”를 넣고 다시 3번 인덱스부터 1개 가져온 뒤 배열([])로 묶어준다.</p>\n<p>fruits와 newFruits를 보면 fruits는 원형 그대로, newFruits는 원하는대로 요소가 수정된 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruits: \"</span><span class=\"token punctuation\">,</span> fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"newFruits: \"</span><span class=\"token punctuation\">,</span> newFruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">></span> fruits<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'오렌지'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'사과'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'레몬'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'바나나'</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">></span> newFruits<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'오렌지'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'딸기'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'바나나'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"immer로-상태값-업데이트하기\" style=\"position:relative;\"><a href=\"#immer%EB%A1%9C-%EC%83%81%ED%83%9C%EA%B0%92-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%ED%95%98%EA%B8%B0\" aria-label=\"immer로 상태값 업데이트하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>immer로 상태값 업데이트하기</h3>\n<p>우선 immer 라이브러리를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">yarn add immer</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> produce <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"immer\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> newFruits <span class=\"token operator\">=</span> <span class=\"token function\">produce</span><span class=\"token punctuation\">(</span>fruits<span class=\"token punctuation\">,</span> <span class=\"token parameter\">draft</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  draft<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"딸기\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>product 함수에는 base 객체, receipt 함수가 인자로 들어간다.</p>\n<p>draft는 원본 fruits 복사본이다. 복사본을 splice 하는 것이므로 fruits 객체는 불변성을 유지한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruits: \"</span><span class=\"token punctuation\">,</span> fruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"newFruits: \"</span><span class=\"token punctuation\">,</span> newFruits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">></span> fruits<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'오렌지'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'사과'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'레몬'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'바나나'</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">></span> newFruits<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'오렌지'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'딸기'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'바나나'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"좀-더-연습해보기\" style=\"position:relative;\"><a href=\"#%EC%A2%80-%EB%8D%94-%EC%97%B0%EC%8A%B5%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"좀 더 연습해보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좀 더 연습해보기</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> baseState <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    todo<span class=\"token operator\">:</span> <span class=\"token string\">\"Learn typescript\"</span><span class=\"token punctuation\">,</span>\n    done<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    todo<span class=\"token operator\">:</span> <span class=\"token string\">\"Try immer\"</span><span class=\"token punctuation\">,</span>\n    done<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>두 번째 객체의 done을 true로 바꾸기</li>\n<li>배열 마지막 요소로 <code class=\"language-text\">{ todo: &quot;Tweet about it&quot; }</code> 객체 추가하기</li>\n</ul>\n<h4 id=\"immer-사용하지-않기\" style=\"position:relative;\"><a href=\"#immer-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EA%B8%B0\" aria-label=\"immer 사용하지 않기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>immer 사용하지 않기</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> newState <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token operator\">...</span>baseState<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">tweet<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> index <span class=\"token operator\">!==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> tweet <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>tweet<span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    todo<span class=\"token operator\">:</span> <span class=\"token string\">\"Tweet about it\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이건 컨닝했다 흑흑</p>\n<p>baseState을 펼쳐서 map 함수로 각 객체와 그 인덱스 번호(키-값 쌍)를 저장한다.</p>\n<p>1번 인덱스인 객체의 done 값을 true로 바꿔야 하므로, 인덱스가 1이 아닌 객체는 그대로 출력해주고 1일 때 done 키에 해당하는 값만 바꿔준다.</p>\n<p>{ todo: “Tweet about it” } 는 새로 추가해야 하는 객체이므로 newState 배열 마지막 순서로 넣어준다.</p>\n<p>비구조화와 삼항연산자를 잘 썼어야 하는 문제였다.</p>\n<h4 id=\"immer-사용하기\" style=\"position:relative;\"><a href=\"#immer-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"immer 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>immer 사용하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> newState <span class=\"token operator\">=</span> <span class=\"token function\">produce</span><span class=\"token punctuation\">(</span>baseState<span class=\"token punctuation\">,</span> <span class=\"token parameter\">draft</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  draft<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>done <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  draft<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> todo<span class=\"token operator\">:</span> <span class=\"token string\">\"Tweet about it\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<p>두 케이스 모두 newState는 이렇게 나온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> todo<span class=\"token operator\">:</span> <span class=\"token string\">'Learn typescript'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> todo<span class=\"token operator\">:</span> <span class=\"token string\">'Try immer'</span><span class=\"token punctuation\">,</span> done<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> todo<span class=\"token operator\">:</span> <span class=\"token string\">'Tweet about it'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","fields":{"slug":"/posts/til113","tagSlugs":["/tag/til/","/tag/react/"]},"frontmatter":{"date":"2021-03-15T18:26:32","description":"immer 라이브러리로 불변성 유지하면서 상태값 업데이트 쉽게 하기","tags":["til","react"],"title":"immer 라이브러리 사용하기","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til113"}}}