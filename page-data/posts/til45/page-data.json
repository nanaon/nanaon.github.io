{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til45","result":{"data":{"markdownRemark":{"id":"95620065-53b3-58de-bdbf-3aef7846b233","html":"<h3 id=\"select_related\" style=\"position:relative;\"><a href=\"#select_related\" aria-label=\"select_related permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>select_related()</h3>\n<p>일대일 필드 또는 foreign key를 걸어놓은 관계에서 사용할 수 있다. select_related()가 걸려 있는 변수를 선언한 순간 sql 상에서 테이블 조인이 일어나 DB hit를 하지 않고 연결된 테이블의 데이터를 읽어올 수 있다. (화살표 방향으로 찾기 = 정참조)</p>\n<p><code class=\"language-text\">select_related()</code>를 사용하려면 변수에 할당해주고 해야함\n변수를 실행하는 순간 테이블끼리 left join.</p>\n<h3 id=\"prefetch_related\" style=\"position:relative;\"><a href=\"#prefetch_related\" aria-label=\"prefetch_related permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>prefetch_related()</h3>\n<p><code class=\"language-text\">select_related()</code>는 일대일 또는 ForeignKey로 연결된 필드끼리만 사용할 수 있다면, <code class=\"language-text\">prefetch_related()</code>는 관련 테이블을 모두 쿼리해와서 python에서 처리하기 때문에 아무 관계에서나 다 쓸 수 있다.</p>\n<p>피자 - 토핑 관계를 생각해보면, 내가 콤비네이션 피자 이름을 알고 있다면 <code class=\"language-text\">select_related()</code>로 찾을 수 있다. 만약 토핑 정보만 알고 특정 토핑이 안 들어간(혹은 들어간) 피자를 찾고 싶다면 <code class=\"language-text\">prefetch_related()</code>를 쓰면 된다. (화살표 역방향으로 찾기 = 역참조)</p>","fields":{"slug":"/posts/til45","tagSlugs":["/tag/til/","/tag/django/","/tag/wecode/"]},"frontmatter":{"date":"2020-06-23T16:28:32.160Z","description":"","tags":["til","django","wecode"],"title":"django - 장고 쿼리 이론 및 실습 (작성 중)","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til45"}}}