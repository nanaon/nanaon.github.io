{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til11","result":{"data":{"markdownRemark":{"id":"12b97dbe-d7f7-549f-a21e-4ed40bb0b4ac","html":"<h3 id=\"refactoring이란\" style=\"position:relative;\"><a href=\"#refactoring%EC%9D%B4%EB%9E%80\" aria-label=\"refactoring이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Refactoring이란</h3>\n<p>함수 기능은 그대로 두고 구현하는 방식을 개선하는 것. 함수를 별도 파일로 저장해 모듈화 하고 import 하면 코드 중복을 줄여 효율적으로 작성 가능하다.</p>\n<ul>\n<li>예시<br>\nrefactoring 전 index.py 파일</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/local/bin/python3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type:text/html; charset=utf-8\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> cgi<span class=\"token punctuation\">,</span> os\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  files <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">)</span>\n  listStr <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n    listStr <span class=\"token operator\">=</span> listStr <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;li>&lt;a href=\"index.py?id={name}\">{name}&lt;/a>&lt;/li>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>item<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> listStr\n\nform <span class=\"token operator\">=</span> cgi<span class=\"token punctuation\">.</span>FieldStorage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'id'</span> <span class=\"token keyword\">in</span> form<span class=\"token punctuation\">:</span>\n  pageId <span class=\"token operator\">=</span> form<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value\n  description <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data/'</span><span class=\"token operator\">+</span>pageId<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  update_link <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;a href=\"update.py?id={}\">update&lt;/a>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pageId<span class=\"token punctuation\">)</span>\n  delete_action <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''\n    &lt;form action=\"process_delete.py\" method=\"post\">\n      &lt;input type=\"hidden\" name=\"pageId\" value=\"{}\">\n      &lt;input type=\"submit\" value=\"delete\">\n    &lt;/form>\n  '''</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pageId<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n  pageId <span class=\"token operator\">=</span> <span class=\"token string\">'Welcome'</span>\n  description <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, Web'</span>\n  update_link <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  delete_action <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\n&lt;!doctype html>\n&lt;html>\n&lt;head>\n  &lt;title>&lt;/title>\n  &lt;meta charset=\"utf-8\">\n&lt;/head>\n&lt;body>\n  &lt;h1>&lt;a href=\"index.py\" target=\"_blank\">WEB&lt;/a>\n&lt;/h1>\n  &lt;ol>\n    {listStr}\n  &lt;/ol>\n  &lt;a href=\"create.py\">create&lt;/a>\n  {update_link}\n  {delete_action}\n&lt;h2>{title}&lt;/h2>\n&lt;p>{desc}&lt;/p>\n&lt;/body>\n&lt;/html>\n'''</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>\n    title<span class=\"token operator\">=</span>pageId<span class=\"token punctuation\">,</span>\n    desc <span class=\"token operator\">=</span> description<span class=\"token punctuation\">,</span>\n    listStr<span class=\"token operator\">=</span>getList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    update_link<span class=\"token operator\">=</span>update_link<span class=\"token punctuation\">,</span>\n    delete_action<span class=\"token operator\">=</span>delete_action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>getList()함수 부분을 view.py 라는 별도 파일로 분리</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  files <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">)</span>\n  listStr <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n    listStr <span class=\"token operator\">=</span> listStr <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;li>&lt;a href=\"index.py?id={name}\">{name}&lt;/a>&lt;/li>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span>item<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> listStr</code></pre></div>\n<p>refactoring 후 index.py 파일\n<code class=\"language-text\">import 모듈명</code>으로 불러오고 <code class=\"language-text\">모듈명.함수명</code>으로 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/local/bin/python3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type:text/html; charset=utf-8\\n\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> cgi<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">,</span> view\n\nform <span class=\"token operator\">=</span> cgi<span class=\"token punctuation\">.</span>FieldStorage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token string\">'id'</span> <span class=\"token keyword\">in</span> form<span class=\"token punctuation\">:</span>\n  pageId <span class=\"token operator\">=</span> form<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value\n  description <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data/'</span><span class=\"token operator\">+</span>pageId<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  update_link <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;a href=\"update.py?id={}\">update&lt;/a>'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pageId<span class=\"token punctuation\">)</span>\n  delete_action <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''\n    &lt;form action=\"process_delete.py\" method=\"post\">\n      &lt;input type=\"hidden\" name=\"pageId\" value=\"{}\">\n      &lt;input type=\"submit\" value=\"delete\">\n    &lt;/form>\n  '''</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pageId<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n  pageId <span class=\"token operator\">=</span> <span class=\"token string\">'Welcome'</span>\n  description <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, Web'</span>\n  update_link <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  delete_action <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\n&lt;!doctype html>\n&lt;html>\n&lt;head>\n  &lt;title>&lt;/title>\n  &lt;meta charset=\"utf-8\">\n&lt;/head>\n&lt;body>\n  &lt;h1>&lt;a href=\"index.py\" target=\"_blank\">WEB&lt;/a>\n&lt;/h1>\n  &lt;ol>\n    {listStr}\n  &lt;/ol>\n  &lt;a href=\"create.py\">create&lt;/a>\n  {update_link}\n  {delete_action}\n&lt;h2>{title}&lt;/h2>\n&lt;p>{desc}&lt;/p>\n&lt;/body>\n&lt;/html>\n'''</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>\n    title<span class=\"token operator\">=</span>pageId<span class=\"token punctuation\">,</span>\n    desc <span class=\"token operator\">=</span> description<span class=\"token punctuation\">,</span>\n    listStr<span class=\"token operator\">=</span>view<span class=\"token punctuation\">.</span>getList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    update_link<span class=\"token operator\">=</span>update_link<span class=\"token punctuation\">,</span>\n    delete_action<span class=\"token operator\">=</span>delete_action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","fields":{"slug":"/posts/til11","tagSlugs":["/tag/til/","/tag/python/","/tag/생활코딩/"]},"frontmatter":{"date":"2020-04-25T13:12:32","description":"중복을 줄여 효율적으로 코드 작성하기","tags":["til","python","생활코딩"],"title":"Python - module로 코드 중복 줄이기","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til11"}}}