{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til28","result":{"data":{"markdownRemark":{"id":"ba71425f-26c7-5217-b5d7-197120c059ba","html":"<h3 id=\"리스트-컴프리헨션list-comprehension\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%BB%B4%ED%94%84%EB%A6%AC%ED%97%A8%EC%85%98list-comprehension\" aria-label=\"리스트 컴프리헨션list comprehension permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리스트 컴프리헨션(list comprehension)</h3>\n<p>리스트 컴프리헨션이란 새로운 리스트를 만들 때 사용할 수 있는 반복문이다. 리스트와 마찬가지로 대괄호 <code class=\"language-text\">[]</code>를 사용해 작성한다. 일반 for 반복문보다 간결하게 표현할 수 있다는 장점이 있지만 조건이 많아지거나 반복이 중첩될 경우 코드 가독성이 떨어진다는 단점이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">[</span>표현식 <span class=\"token keyword\">for</span> 원소 <span class=\"token keyword\">in</span> 반복 가능한 객체<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>표현식 <span class=\"token keyword\">for</span> 원소 <span class=\"token keyword\">in</span> 반복 가능한 객체 <span class=\"token keyword\">if</span> 조건문<span class=\"token punctuation\">]</span></code></pre></div>\n<p>일반 for 반복문과 동일한 기능이기 때문에 for문을 리스트 컴프리헨션으로 표현하는 것도, 그 반대도 가능하다.</p>\n<p>1부터 10까지 숫자 중 홀수만 뽑아내는 for문을 리스트 컴프리헨션으로 바꿔보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">odd_numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> element <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        odd_numbers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">odd_numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>element <span class=\"token keyword\">for</span> element <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> element <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>odd_numbers<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br>\n<h4 id=\"q1-다음과-같은-도시목록의-리스트가-주어졌을때-도시이름이-s로-시작하지-않는-도시만-리스트로-만들-때-리스트-컴프리헨션을-사용하여-함수를-작성해-보세요\" style=\"position:relative;\"><a href=\"#q1-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%80-%EB%8F%84%EC%8B%9C%EB%AA%A9%EB%A1%9D%EC%9D%98-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EA%B0%80-%EC%A3%BC%EC%96%B4%EC%A1%8C%EC%9D%84%EB%95%8C-%EB%8F%84%EC%8B%9C%EC%9D%B4%EB%A6%84%EC%9D%B4-s%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EB%8F%84%EC%8B%9C%EB%A7%8C-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A1%9C-%EB%A7%8C%EB%93%A4-%EB%95%8C-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%BB%B4%ED%94%84%EB%A6%AC%ED%97%A8%EC%85%98%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%B4-%EB%B3%B4%EC%84%B8%EC%9A%94\" aria-label=\"q1 다음과 같은 도시목록의 리스트가 주어졌을때 도시이름이 s로 시작하지 않는 도시만 리스트로 만들 때 리스트 컴프리헨션을 사용하여 함수를 작성해 보세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q1. 다음과 같은 도시목록의 리스트가 주어졌을때, 도시이름이 S로 시작하지 않는 도시만 리스트로 만들 때 리스트 컴프리헨션을 사용하여 함수를 작성해 보세요.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">cities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Tokyo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Shanghai'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jakarta'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Seoul'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Guangzhou'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Karachi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Shenzhen'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Delhi'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h4 id=\"a1\" style=\"position:relative;\"><a href=\"#a1\" aria-label=\"a1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A1.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">city_name <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>city <span class=\"token keyword\">for</span> city <span class=\"token keyword\">in</span> cities <span class=\"token keyword\">if</span> city<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'S'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>city_name<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'Tokyo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jakarta'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Guangzhou'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Karachi'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Delhi'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br>\n<h4 id=\"q2-다음과-같은-도시-인구수가-튜플의-리스트로-주어졌을때-키가-도시-값이-인구수인-딕셔너리를-딕셔너리-컴프리헨션을-사용한-함수를-작성해-보세요\" style=\"position:relative;\"><a href=\"#q2-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%80-%EB%8F%84%EC%8B%9C-%EC%9D%B8%EA%B5%AC%EC%88%98%EA%B0%80-%ED%8A%9C%ED%94%8C%EC%9D%98-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A1%9C-%EC%A3%BC%EC%96%B4%EC%A1%8C%EC%9D%84%EB%95%8C-%ED%82%A4%EA%B0%80-%EB%8F%84%EC%8B%9C-%EA%B0%92%EC%9D%B4-%EC%9D%B8%EA%B5%AC%EC%88%98%EC%9D%B8-%EB%94%95%EC%85%94%EB%84%88%EB%A6%AC%EB%A5%BC-%EB%94%95%EC%85%94%EB%84%88%EB%A6%AC-%EC%BB%B4%ED%94%84%EB%A6%AC%ED%97%A8%EC%85%98%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%B4-%EB%B3%B4%EC%84%B8%EC%9A%94\" aria-label=\"q2 다음과 같은 도시 인구수가 튜플의 리스트로 주어졌을때 키가 도시 값이 인구수인 딕셔너리를 딕셔너리 컴프리헨션을 사용한 함수를 작성해 보세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q2. 다음과 같은 도시, 인구수가 튜플의 리스트로 주어졌을때, 키가 도시 값이 인구수인 딕셔너리를 딕셔너리 컴프리헨션을 사용한 함수를 작성해 보세요.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">population_of_city <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>‘Tokyo<span class=\"token string\">', 36923000), (‘Shanghai'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>‘Jakarta<span class=\"token string\">', 30000000), (‘Seoul'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25514000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>‘Guangzho<span class=\"token string\">u', 25000000), (‘Beijing'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24900000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>‘Karachi<span class=\"token string\">', 24300000 ), ( ‘Shenzhen'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23300000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>‘Delhi'<span class=\"token punctuation\">,</span> <span class=\"token number\">21753486</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></code></pre></div>\n<h4 id=\"a2\" style=\"position:relative;\"><a href=\"#a2\" aria-label=\"a2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A2.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">dict_city <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> population_of_city<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> population_of_city<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>population_of_city<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dict_city<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'Tokyo'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">36923000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Shanghai'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">34000000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jakarta'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30000000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Seoul'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25514000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Guangzhou'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25000000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Beijing'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">24900000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Karachi'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">24300000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Shenzhen'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">23300000</span><span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"/posts/til28","tagSlugs":["/tag/til/","/tag/python/","/tag/we-code/"]},"frontmatter":{"date":"2020-06-06T14:44:32.169Z","description":"리스트 컴프리헨션이란 새로운 리스트를 만들 때 사용할 수 있는 반복문이다. 리스트와 마찬가지로 대괄호를 사용해 작성한다.","tags":["TIL","Python","WeCode"],"title":"Python - list comprehension","socialImage":"/media/42-line-bible.jpg"}}},"pageContext":{"slug":"/posts/til28"}}}