{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til18","result":{"data":{"markdownRemark":{"id":"7301aead-5288-518a-999a-b6c47e92db48","html":"<p>함수에서 미리 지정된 parameter는 그렇지 않은 것보다 반드시 뒤에 와야한다. 따라서 아래 코드를 실행하면 SyntaxError가 뜬다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">order</span><span class=\"token punctuation\">(</span>no1 <span class=\"token operator\">=</span> <span class=\"token string\">\"아침\"</span><span class=\"token punctuation\">,</span> no2<span class=\"token punctuation\">,</span> no3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>no1<span class=\"token punctuation\">}</span></span><span class=\"token string\">은 9시에 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>no2<span class=\"token punctuation\">}</span></span><span class=\"token string\">은 12시에 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>no3<span class=\"token punctuation\">}</span></span><span class=\"token string\">은 6시에 먹는다.\"</span></span><span class=\"token punctuation\">)</span>\n  \norder<span class=\"token punctuation\">(</span><span class=\"token string\">\"점심\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"저녁\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nSyntaxError<span class=\"token punctuation\">:</span> non<span class=\"token operator\">-</span>default argument follows default argument</code></pre></div>\n<p>아직 값이 없는 나머지 parameter에 순서대로 들어가면 될 것 같은데 왜 그럴까?</p>\n<br>\n<p>우선 파이썬 function parameter에서 arguments를 처리하는 순서는 다음과 같다.</p>\n<ol>\n<li>positional(non-default) arguments</li>\n<li>default arguments</li>\n<li>variable length positional arguments (=*arg)</li>\n<li>keyword-only arguments\n4-1. non-default keyword-only arguments\n4-2. default keyword-only arguments</li>\n<li>variable length keyword arguments (=**kwargs)</li>\n</ol>\n<p>간단한 번역과 함께 예를 조금 들자면 이렇다.</p>\n<ol>\n<li>앞에서부터 순서대로 지정되는 arguments</li>\n<li>함수 정의 단계에서 parameter에 이미 지정된 arguments</li>\n<li>순서대로 지정되며 개수가 가변적인 arguments (예 - list, tuple)<br>\n4-1. 1번처럼 함수 정의 단계에서 값을 정하지 않는 arguments. 함수 호출 단계에서 <code class=\"language-text\">변수=&quot;값&quot;</code> 형태로 argument를 준다.<br>\n4-2. 2번처럼 함수 정의 단계에서 값을 지정하는 arguments. *(asterisk) 뒤에 오는지로 2번과 구분한다. <del>사실상 거의 쓸 일이 없다</del></li>\n<li>key = value 짝 개수가 가변적인 arguments (예 - dictionary)</li>\n</ol>\n<p>이제 1번 positional arguments와 3번 variable length positional arguments를 조합해서 함수를 만들어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"a는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span></span><span class=\"token string\">이고 b는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>b<span class=\"token punctuation\">}</span></span><span class=\"token string\">고 variable length arguments는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>arg<span class=\"token punctuation\">}</span></span><span class=\"token string\">입니다.\"</span></span><span class=\"token punctuation\">)</span>\n\ntest<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\na는 <span class=\"token number\">1</span>이고 b는 <span class=\"token number\">2</span>고 variable length arguments는 <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>입니다<span class=\"token punctuation\">.</span></code></pre></div>\n<p>위 함수의 동작 방식은 다음과 같다.</p>\n<ul>\n<li>positional arguments인 a, b에 첫 번째, 두 번째 argument인 1과 2가 할당되었다.</li>\n<li>나머지는 튜플 형태로 arg argument에 할당되었다. variable length arguments는 위 예시와 같이 요소 3개짜리 튜플이 될 수도 있고 5개짜리가 될 수도 있다.<br>\n<em>참고) *(asterisk)는 list / tuple 을 해체해서 그 안의 요소를 하나씩 꺼내는 언패킹을 의미</em></li>\n</ul>\n<p>만약 a, b와 arg의 위치가 반대라면?</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>arg<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\"># 코드 후략</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nTypeError<span class=\"token punctuation\">:</span> test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> missing <span class=\"token number\">2</span> required keyword<span class=\"token operator\">-</span>only arguments<span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span> <span class=\"token keyword\">and</span> <span class=\"token string\">'b'</span></code></pre></div>\n<p>주어진 arguments가 모두 가변 인자(*arg)에 들어가 a와 b는 받을 arguments가 없어졌다.</p>\n<br>\n<p>다음으로, 1번 positional arguments와 2번 default arguments와 4번 keyword-only arguments, 5번 variable length keyword arguments를 조합해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">stafflist</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> area<span class=\"token operator\">=</span><span class=\"token string\">\"서울\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> characteristic<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">씨는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>area<span class=\"token punctuation\">}</span></span><span class=\"token string\">지역 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>characteristic<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 직원입니다.\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"사무실 주소는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>info<span class=\"token punctuation\">[</span><span class=\"token string\">'address'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">입니다.\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"이메일 주소는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>info<span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">입니다.\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"연락처는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>info<span class=\"token punctuation\">[</span><span class=\"token string\">'phone'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">입니다.\"</span></span><span class=\"token punctuation\">)</span>\n\ninfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"김안녕\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"address\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"서울시 강남구 테헤란로\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"email\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"kim@email.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"phone\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"01012341234\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"정헬로\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"address\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"서울시 강남구 역삼로\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"email\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"hello@email.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"phone\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"01056785678\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"강하이\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"address\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"서울시 강남구 영동대로\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"email\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"hi@email.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"phone\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"01043214321\"</span>\n    <span class=\"token punctuation\">}</span>    \n<span class=\"token punctuation\">}</span>\n\nstaffname <span class=\"token operator\">=</span> <span class=\"token string\">\"김안녕\"</span>\nstafflist<span class=\"token punctuation\">(</span>staffname<span class=\"token punctuation\">,</span> characteristic<span class=\"token operator\">=</span><span class=\"token string\">\"성실한\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>info<span class=\"token punctuation\">[</span>staffname<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\n김안녕씨는 서울지역 성실한 직원입니다<span class=\"token punctuation\">.</span>\n사무실 주소는 서울시 강남구 테헤란로입니다<span class=\"token punctuation\">.</span>\n이메일 주소는 kim@email<span class=\"token punctuation\">.</span>com입니다<span class=\"token punctuation\">.</span>\n연락처는 <span class=\"token number\">01012341234</span>입니다<span class=\"token punctuation\">.</span></code></pre></div>\n<p>**(double asterisk)는 dictionary 을 해체해서 그 안의 key와 value를 하나씩 꺼내는 언패킹을 의미. key 한 번, value 한 번, 총 두 번 언패킹을 해야하기 때문에 애스터리스크를 두 번 붙인다. key만 사용하려면 한 번만 붙여준다.</p>\n<p>위 함수의 동작 방식은 다음과 같다.</p>\n<ul>\n<li><code class=\"language-text\">stafflist(staffname, **info[staffname])</code>에서 <code class=\"language-text\">staffname</code>, 즉 <code class=\"language-text\">&quot;김안녕&quot;</code>은 parameter 중 <code class=\"language-text\">name</code>에 들어갔다.</li>\n<li><code class=\"language-text\">area</code>는 이미 지정했으므로 입력한 argument와 관계 없이 패스</li>\n<li><code class=\"language-text\">characteristic</code> 값을 argument로 지정해줬으므로 지정한 값이 들어간다.</li>\n<li><code class=\"language-text\">**info</code>에는 <code class=\"language-text\">info[staffname]</code>, 즉 딕셔너리 <code class=\"language-text\">info</code> 중 <code class=\"language-text\">&quot;김안녕&quot;</code> 키에 해당하는 값이 들어갔다.</li>\n</ul>\n<br>\n<p>만약 순서가 바뀌어 default argument가 positional argument보다 앞으로 오게 되면 SyntaxError가 뜰 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">stafflist</span><span class=\"token punctuation\">(</span>area<span class=\"token operator\">=</span><span class=\"token string\">\"서울\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> characteristic<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\"># 코드 후략</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nSyntaxError<span class=\"token punctuation\">:</span> non<span class=\"token operator\">-</span>default argument follows default argument</code></pre></div>\n<br>\n<p>위에서 정리한 내용을 바탕으로 에러가 나는 구문을 수정해보자.</p>\n<ul>\n<li>상황 1</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">func_param_with_var_args</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span>\n\nfunc_param_with_var_args<span class=\"token punctuation\">(</span><span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"01012341234\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"seoul\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nTypeError<span class=\"token punctuation\">:</span> func_param_with_var_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> missing <span class=\"token number\">1</span> required keyword<span class=\"token operator\">-</span>only argument<span class=\"token punctuation\">:</span> <span class=\"token string\">'age'</span></code></pre></div>\n<p><code class=\"language-text\">*args</code>가 <code class=\"language-text\">&quot;wecode&quot;</code>를 제외한 나머지 arguments를 모두 가져가 <code class=\"language-text\">age</code>는 아무것도 받지 못해 <code class=\"language-text\">TypeError</code>가 발생했다. 하지만 <code class=\"language-text\">SyntaxError</code>가 아닌 이상 함수 정의 단계에서는 문제가 없다는 뜻이다. 따라서 위 함수를 동작하게 하는 방법은 두 가지가 있다.</p>\n<ol>\n<li>함수를 다시 정의한다.<br>\nvariable length argument인 <code class=\"language-text\">*args</code>를 <code class=\"language-text\">age</code> 뒤에 보내 <code class=\"language-text\">age</code>를 positional argument로 취급해준다. 따라서 함수 호출 부분에서도 argument 순서를 바꿔주어야 한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">func_param_with_var_args</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n\n\nfunc_param_with_var_args<span class=\"token punctuation\">(</span><span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"01012341234\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"seoul\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nname<span class=\"token operator\">=</span>wecode\nage<span class=\"token operator\">=</span><span class=\"token number\">20</span>\nargs<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">01012341234</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'seoul'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li>argument의 성질을 명확히 정의해준다.<br>\n초기 <code class=\"language-text\">TypeError</code>가 난 함수의 문제는 positional argument인 <code class=\"language-text\">age</code>가 가져갈 값이 없다는 것이다. 따라서 variable length argument보다 뒤에 위치한 <code class=\"language-text\">age</code>를 keyword-only argument로 만들어서 값을 뺏기지 않도록 한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">func_param_with_var_args</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span>\n\n\nfunc_param_with_var_args<span class=\"token punctuation\">(</span><span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"01012341234\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"seoul\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nname<span class=\"token operator\">=</span>wecode\nargs<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">'01012341234'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'seoul'</span><span class=\"token punctuation\">)</span>\nage<span class=\"token operator\">=</span><span class=\"token number\">20</span></code></pre></div>\n<ul>\n<li>상황 2</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">func_param_with_kwargs</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kwargs=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n\n\nfunc_param_with_kwargs<span class=\"token punctuation\">(</span><span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">,</span> mobile<span class=\"token operator\">=</span><span class=\"token string\">\"01012341234\"</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span><span class=\"token string\">\"seoul\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nSyntaxError<span class=\"token punctuation\">:</span> invalid syntax</code></pre></div>\n<p>위 함수는 positional - positional - variable length keyword - default 순으로 정의되었다. 따라서,</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">func_param_with_kwargs</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kwargs=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">)</span>\n\n\nfunc_param_with_kwargs<span class=\"token punctuation\">(</span><span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">,</span> mobile<span class=\"token operator\">=</span><span class=\"token string\">\"01012341234\"</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span><span class=\"token string\">\"seoul\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nname<span class=\"token operator\">=</span>wecode\nage<span class=\"token operator\">=</span><span class=\"token number\">20</span>\naddress<span class=\"token operator\">=</span>seoul\nkwargs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mobile'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'01012341234'</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>variable length keyword arguments를 가장 뒤로 보내주면 정상 출력된다. 함수 호출 단계에서 <code class=\"language-text\">mobile</code>이 <code class=\"language-text\">address</code>보다 먼저 나왔지만 키를 지정해주었기 때문에 순서와 상관없이 제자리를 찾아갔다.</p>\n<ul>\n<li>상황 3</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">mixed_params</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kwargs=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n\n\nmixed_params<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"01012341234\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"male\"</span> <span class=\"token punctuation\">,</span>mobile<span class=\"token operator\">=</span><span class=\"token string\">\"01012341234\"</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span><span class=\"token string\">\"seoul\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nSyntaxError<span class=\"token punctuation\">:</span> invalid syntax</code></pre></div>\n<p>default - variable length - positional - variable length keyword - keyword-only 순으로 함수를 정의해 SyntaxError가 났다.\n따라서 positional - default - variable length - keyword-only - variable length keyword 순으로 배열해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">mixed_params</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"args=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kwargs=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>kwargs<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address=\"</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n\n\nmixed_params<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"01012341234\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"male\"</span> <span class=\"token punctuation\">,</span>mobile<span class=\"token operator\">=</span><span class=\"token string\">\"01012341234\"</span><span class=\"token punctuation\">,</span> address<span class=\"token operator\">=</span><span class=\"token string\">\"seoul\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 출력값</span>\nname<span class=\"token operator\">=</span>wecode\nargs<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">'01012341234'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span>\nage<span class=\"token operator\">=</span><span class=\"token number\">20</span>\nkwargs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'mobile'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'01012341234'</span><span class=\"token punctuation\">}</span>\naddress<span class=\"token operator\">=</span>seoul</code></pre></div>\n<br>\n<p><a href=\"https://getkt.com/blog/python-keyword-only-arguments/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">참고한 자료</a></p>","fields":{"slug":"/posts/til18","tagSlugs":["/tag/til/","/tag/python/","/tag/wecode/"]},"frontmatter":{"date":"2020-05-26T17:44:32","description":"파이썬에서 함수 파라미터를 쓸 때 지켜야 할 순서","tags":["til","python","wecode"],"title":"Python - function 정의 시 지켜야 할 argument 순서","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til18"}}}