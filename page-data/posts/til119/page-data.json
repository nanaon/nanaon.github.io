{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til119","result":{"data":{"markdownRemark":{"id":"2fd30609-c91d-5822-9e69-e5b95ca7efd1","html":"<h3 id=\"리액트에서-상태값을-변경하는-2가지-방법\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%97%90%EC%84%9C-%EC%83%81%ED%83%9C%EA%B0%92%EC%9D%84-%EB%B3%80%EA%B2%BD%ED%95%98%EB%8A%94-2%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\" aria-label=\"리액트에서 상태값을 변경하는 2가지 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트에서 상태값을 변경하는 2가지 방법</h3>\n<ol>\n<li>setter 함수를 직접 제공</li>\n<li>setter 함수를 제공하지 않고 dispatch 함수를 제공 - Redux 방식</li>\n</ol>\n<h3 id=\"dispatch-함수-이용-예\" style=\"position:relative;\"><a href=\"#dispatch-%ED%95%A8%EC%88%98-%EC%9D%B4%EC%9A%A9-%EC%98%88\" aria-label=\"dispatch 함수 이용 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dispatch 함수 이용 예</h3>\n<p>dispatch({ 액션 객체 }) 형태로 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"INCREMENT\"</span><span class=\"token punctuation\">,</span> payload<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>액션 객체에는 <code class=\"language-text\">type</code>이라는 키가 필수로 포함되어야 한다. type 키 값으로는 해당 dispatch 함수의 type을 문자열로 명시한다.</p>\n<p>type을 제외하고 나머지는 자유롭게 값 지정 가능하나, 보통 <code class=\"language-text\">payload</code> 키를 넣어 type에 대한 값을 지정한다.</p>\n<p>위 예시에서 <code class=\"language-text\">type: &quot;INCREMENT&quot;</code>에 <code class=\"language-text\">payload: 1</code>이라는 것은 상태값을 1씩 증가시키겠다는 의미다.</p>\n<h3 id=\"usereducer-훅\" style=\"position:relative;\"><a href=\"#usereducer-%ED%9B%85\" aria-label=\"usereducer 훅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useReducer 훅</h3>\n<p>useReducer 훅을 이용해 컴포넌트 상태값을 리덕스의 리듀스처럼 관리할 수 있다.</p>\n<p>(참고 - 리듀서란 dispatch 함수로부터 액션 객체를 받아서 상태값에 대한 setter 로직을 구현한 함수를 말한다.)</p>\n<p>먼저 리듀서를 사용하지 않은 예시다. input 란에 값을 입력하면 myname, age 상태값에 바로 반영하는 로직이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>person<span class=\"token punctuation\">,</span> setPerson<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> myname<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> myname<span class=\"token punctuation\">,</span> age <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> person<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      myname<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>myname<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input\n        type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\n        placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span>\n        onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setPerson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">,</span> myname<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input\n        type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\n        placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"age\"</span>\n        onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setPerson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>myname<span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token comment\">// e.target에서 target이란 현재 element를 나타내고,</span>\n    <span class=\"token comment\">// e.target.value는 현재값을 나타냄</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>useReducer 훅을 사용한다면 이렇게 바꿀 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">prevState<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// type을 받아와서</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> action<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// type에 따라</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'SET_NAME'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 적절히 상태값 세팅</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>prevState<span class=\"token punctuation\">,</span> myname<span class=\"token operator\">:</span> value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'SET_AGE'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>prevState<span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> prevState<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> myame<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> myname<span class=\"token punctuation\">,</span> age <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> type<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      myname<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>myname<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>br <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>input\n        type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\n        name<span class=\"token operator\">=</span><span class=\"token string\">\"SET_NAME\"</span>\n        placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span>\n        onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input\n        type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\n        name<span class=\"token operator\">=</span><span class=\"token string\">\"SET_AGE\"</span>\n        placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"age\"</span>\n        onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/posts/til119","tagSlugs":["/tag/til/","/tag/react/"]},"frontmatter":{"date":"2021-03-19T17:42:32","description":"컴포넌트 상태값을 Redux처럼 관리하기","tags":["til","react"],"title":"리듀서와 useReducer","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til119"}}}