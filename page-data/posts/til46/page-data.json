{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til46","result":{"data":{"markdownRemark":{"id":"b2101065-cd07-5150-b65e-97bf14a4794f","html":"<h3 id=\"기본-작업-흐름\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%9E%91%EC%97%85-%ED%9D%90%EB%A6%84\" aria-label=\"기본 작업 흐름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 작업 흐름</h3>\n<ol>\n<li>최초 프로젝트 시작 시 원격저장소 마스터를 내 로컬 마스터로 복사 (master에 이미 다른 팀원이 최신 파일을 올려두었다는 가정 하)<br>\n<code class=\"language-text\">git clone 마스터 브랜치 주소</code><br>\n<br></li>\n<li>로컬 마스터를 복사해서 마찬가지로 내 로컬에 브랜치 생성. 즉, 브랜치 생성 = 현재 로컬 마스터를 브랜치에 복사<br>\n<code class=\"language-text\">git branch 브랜치이름</code><br>\n<br></li>\n<li>해당 브랜치에서 작업 완료 후 혹은 중간중간 원격저장소에 push<br>\n<code class=\"language-text\">git add .</code> : 스테이징<br>\n<code class=\"language-text\">git commit</code> : 에디터로 커밋 메시지 작성<br>\n<code class=\"language-text\">git push origin 브랜치이름</code> : 마스터로 푸시 X. 반드시 브랜치로 푸시<br>\n<br></li>\n<li>해당 브랜치 github 페이지에서 Pull request<br>\n<br></li>\n<li>검토가 끝나고 마스터와 merge가 되면 내 로컬 마스터로 이동해서 pull 받아옴. 이때 작업 중이던 것은 commit까지 해두고 pull 받아와야 함.<br>\n<code class=\"language-text\">git add .</code><br>\n<code class=\"language-text\">git commit</code> : 작업 내용 임시저장까지 완료한 후 pull 해와야 함<br>\n<code class=\"language-text\">git checkout master</code><br>\n<code class=\"language-text\">git pull origin master</code><br>\n<br></li>\n<li>작업하던 것과 싱크를 맞춰야 하므로 작업하던 브랜치로 이동해서 내 로컬 마스터 내용과 merge 해줌<br>\n<code class=\"language-text\">git checkout 브랜치이름</code><br>\n<code class=\"language-text\">git merge master</code> : 여기서 master는 원격저장소의 master가 아니라 내 로컬을 말함<br>\n<br></li>\n<li>충돌(conflict) 메시지에 따라서 파일 수정. 꼭 수정 후 바로 push하지 않아도 괜찮지만, push할 준비가 된 브랜치에 한해 <code class=\"language-text\">git merge master</code>를 해주는 게 좋다.<br>\n<code class=\"language-text\">git add .</code><br>\n<code class=\"language-text\">git commit</code><br>\n<code class=\"language-text\">git push origin 브랜치이름</code><br></li>\n</ol>\n<h3 id=\"원격-저장소에-만들어진-브랜치-로컬로-가져오기\" style=\"position:relative;\"><a href=\"#%EC%9B%90%EA%B2%A9-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%97%90-%EB%A7%8C%EB%93%A4%EC%96%B4%EC%A7%84-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%A1%9C%EC%BB%AC%EB%A1%9C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0\" aria-label=\"원격 저장소에 만들어진 브랜치 로컬로 가져오기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원격 저장소에 만들어진 브랜치 로컬로 가져오기</h3>\n<ol>\n<li>원격 저장소 변경사항 업데이트<br>\n<code class=\"language-text\">git remote update</code><br>\n<br></li>\n<li>원격 저장소의 모든 브랜치 보기<br>\n<code class=\"language-text\">git branch -a</code><br>\n<br></li>\n<li>feature/modeling 이라는 브랜치 가져오기<br>\n<code class=\"language-text\">git checkout -t origin/feature/modeling</code><br></li>\n</ol>\n<h3 id=\"그냥-임시저장을-하고-싶을-뿐이라-커밋-메시지-남기기-부담스럽다면\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%83%A5-%EC%9E%84%EC%8B%9C%EC%A0%80%EC%9E%A5%EC%9D%84-%ED%95%98%EA%B3%A0-%EC%8B%B6%EC%9D%84-%EB%BF%90%EC%9D%B4%EB%9D%BC-%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%8B%9C%EC%A7%80-%EB%82%A8%EA%B8%B0%EA%B8%B0-%EB%B6%80%EB%8B%B4%EC%8A%A4%EB%9F%BD%EB%8B%A4%EB%A9%B4\" aria-label=\"그냥 임시저장을 하고 싶을 뿐이라 커밋 메시지 남기기 부담스럽다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그냥 임시저장을 하고 싶을 뿐이라 커밋 메시지 남기기 부담스럽다면</h3>\n<ol>\n<li>현재 작업 내용을 임시 저장<br>\n<code class=\"language-text\">git add .</code><br>\n<code class=\"language-text\">git stash</code><br>\n<br></li>\n<li>임시 저장한 작업 내역을 다시 불러옴<br>\n<code class=\"language-text\">git stash apply [stash 이름]</code><br>\n<br></li>\n<li>작업 완료 후에는 보통 푸시와 과정 동일<br>\n<code class=\"language-text\">git add .</code><br>\n<code class=\"language-text\">git commit</code><br>\n<code class=\"language-text\">git push origin 브랜치이름</code><br>\n<br></li>\n<li>작업 끝난 내용의 stash 제거하기. 가장 최근 stash 하나를 제거한다.<br>\n<code class=\"language-text\">git stash drop</code><br>\n<br></li>\n<li>만약 apply와 동시에 stash를 제거하고 싶다면<br>\n<code class=\"language-text\">git stash pop</code><br>\n<br></li>\n<li>stash를 잘못 불러왔다면<br>\n<code class=\"language-text\">git stash show -p | git apply -R</code><br>\n혹은<br>\n<code class=\"language-text\">git stash show -p [stash 이름] | git apply -R</code><br></li>\n</ol>\n<h3 id=\"헉-실수했다\" style=\"position:relative;\"><a href=\"#%ED%97%89-%EC%8B%A4%EC%88%98%ED%96%88%EB%8B%A4\" aria-label=\"헉 실수했다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>헉 실수했다</h3>\n<ul>\n<li>커밋을 취소하고 싶다면<br>\n<code class=\"language-text\">git reset --soft HEAD^</code><br>\n커밋을 취소하고 변경 사항을 staged 상태로 돌림 (add까지 한 상태로)<br>\n<br>\n<code class=\"language-text\">git reset --mixed HEAD^</code><br>\n커밋을 취소하고 변경 사항을 unstaged 상태로 돌림 (add 이전 상태로)<br>\n<br></li>\n<li>브랜치를 삭제하고 싶다면<br>\n<code class=\"language-text\">git branch -d 브랜치이름</code><br></li>\n</ul>\n<h3 id=\"기타-참고할-점\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%83%80-%EC%B0%B8%EA%B3%A0%ED%95%A0-%EC%A0%90\" aria-label=\"기타 참고할 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기타 참고할 점</h3>\n<ul>\n<li>Pull request(PR) 날린 후 merge 대기 상태에서 계속 push 하면 commit이 누적되니까 나중에 한꺼번에 merge 가능하다. merge 기다리면서 같은 브랜치에서 계속 작업 가능\n<br></li>\n<li>merge 전 새 브랜치 파서 작업하려면 우선 내 로컬 마스터로 이동한 후에 새 브런치를 만들어준다.<br>\n<code class=\"language-text\">git checkout master</code><br>\n<code class=\"language-text\">git pull origin master</code> : 혹시 적용해야할 변경사항이 없는지 확인<br>\n<code class=\"language-text\">git branch 새브랜치이름</code><br>\n<code class=\"language-text\">git checkout 새브랜치이름</code> : 이동 후 새 작업 시작<br>\n<br></li>\n<li>브랜치 이동 시 반드시 add - commit 혹은 stash까지 하고 이동해야 한다. 잘못하면 다른 브랜치와 작업 내용이 섞일 수 있다.xw</li>\n</ul>","fields":{"slug":"/posts/til46","tagSlugs":["/tag/til/","/tag/git/","/tag/github/","/tag/wecode/"]},"frontmatter":{"date":"2020-06-24T21:22:32.160Z","description":"git과 github를 이용해 팀 프로젝트 하는 법","tags":["til","git","github","wecode"],"title":"Git - 팀 프로젝트 중 git과 github 사용 흐름","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til46"}}}