{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til82","result":{"data":{"markdownRemark":{"id":"9fa086d6-47f0-52ce-95e9-0ece115a7682","html":"<h3 id=\"4장-데이터-전송의-기초\" style=\"position:relative;\"><a href=\"#4%EC%9E%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%86%A1%EC%9D%98-%EA%B8%B0%EC%B4%88\" aria-label=\"4장 데이터 전송의 기초 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4장. 데이터 전송의 기초</h3>\n<h4 id=\"4-다항코드\" style=\"position:relative;\"><a href=\"#4-%EB%8B%A4%ED%95%AD%EC%BD%94%EB%93%9C\" aria-label=\"4 다항코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(4) 다항코드</h4>\n<h5 id=\"강의-목표\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%98-%EB%AA%A9%ED%91%9C\" aria-label=\"강의 목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>강의 목표</h5>\n<p>데이터 링크 계층의 오류 검출코드 종류와 원리를 이해한다.</p>\n<h5 id=\"오류-극복-방법\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98-%EA%B7%B9%EB%B3%B5-%EB%B0%A9%EB%B2%95\" aria-label=\"오류 극복 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류 극복 방법</h5>\n<p>원래 데이터에 부가적인 것을 넣어 오류를 검출함</p>\n<ul>\n<li>\n<p><strong>오류 검출코드</strong>를 넣어 수신호스트가 오류 검출 후 <strong>재전송</strong>으로 복구</p>\n<ul>\n<li>CRC (Cyclic Redundancy Check)</li>\n</ul>\n</li>\n<li>\n<p><strong>오류복구 코드</strong>를 넣어 수신호스트가 오류 <strong>검출과 복구를 동시에 수행</strong></p>\n<ul>\n<li>몇 번째 비트에서 오류가 발생했는지 알 수 있으므로 해당 비트 오류를 직접 수정 가능</li>\n<li>해밍코드 (Hamming code)</li>\n<li>순방향 오류복구 (FEC: Forward Error Control)</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"오류-검출\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98-%EA%B2%80%EC%B6%9C\" aria-label=\"오류 검출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류 검출</h5>\n<ul>\n<li>BEC (Backward Error Control): FEC와 반대되는 개념. 오류 제어</li>\n<li>ARQ (Automatic Repeat reQuest): 자동 재전송 요청</li>\n<li>\n<p>패리티 (Parity)</p>\n<ul>\n<li>약속에 따라서 전송 비트 내 1의 개수를 맞춤</li>\n<li>홀수 패리티 (1이 홀수개가 아니면 오류)</li>\n<li>짝수 패리티 (1이 짝수개가 아니면 오류)</li>\n<li><img src=\"/media/network15.JPG\" alt=\"패리티 비트\"></li>\n<li>하지만 패리티 내에서 오류가 복수개 발생하면 패리티 체크로 확인할 수 없으므로 블록 검사 필요</li>\n<li><img src=\"/media/network17.jpg\" alt=\"패리티 비트 단점\"></li>\n</ul>\n</li>\n<li>\n<p>블록 검사 (Block sum check)</p>\n<ul>\n<li><img src=\"/media/network16.JPG\" alt=\"블록 검사\"></li>\n</ul>\n</li>\n<li>다항코드 (Polynomial Code)\n<img src=\"/media/network18.jpg\" alt=\"생성 다항식과 체크섬 계산 예\"></li>\n</ul>","fields":{"slug":"/posts/til82","tagSlugs":["/tag/til/","/tag/network/"]},"frontmatter":{"date":"2021-01-03T00:51:32","description":"다항코드","tags":["til","network"],"title":"컴퓨터 네트워크 강의 - 4장. 데이터 전송의 기초 (4) 다항코드","socialImage":"/naon.png"}}},"pageContext":{"slug":"/posts/til82"}}}